{"version":3,"sources":["Todo.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","react_default","a","createElement","List","ListItem","ListItemAvatar","ListItemText","primary","text","secondary","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","_useState","useState","_useState2","Object","slicedToArray","todos","setTodos","_useState3","_useState4","input","setInput","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","todo","className","FormControl","InputLabel","Input","value","onChange","event","target","Button","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","src_Todo","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"mTAaeA,MAXf,SAAcC,GACb,OACCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,MAEAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAcC,QAASR,EAAMS,KAAMC,UAAU,gCCahCC,EAnBQC,IAASC,cAAc,CAE5CC,OAAQ,0CAERC,WAAY,8BAEZC,UAAW,cAEXC,cAAe,0BAEfC,kBAAmB,eAEnBC,MAAO,4CAEPC,cAAe,iBAGSC,YCkCXC,MA9Cf,WAAe,IAAAC,EACWC,mBAAS,IADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACRK,EADQH,EAAA,GACDI,EADCJ,EAAA,GAAAK,EAEWN,mBAAS,IAFpBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAERE,EAFQD,EAAA,GAEDE,EAFCF,EAAA,GAoBb,OAhBFG,oBAAU,WACRvB,EAAGwB,WAAW,SAASC,QAAQ,YAAY,QAAQC,WAAW,SAAAC,GAC5DT,EAASS,EAASC,KAAKC,IAAI,SAAAC,GAAG,OAAIA,EAAIC,OAAOC,WAG/C,IAYE1C,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,OACd3C,EAAAC,EAAAC,cAAA,0BACDF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,qBACI7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAOC,MAAOhB,EAAOiB,SAAU,SAAAC,GAAK,OAAIjB,EAASiB,EAAMC,OAAOH,WAGpE/C,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQC,UAAWrB,EAAOsB,KAAK,SAASC,QAlB5B,SAACL,GACfA,EAAMM,iBACN7C,EAAGwB,WAAW,SAASsB,IAAI,CACzBd,KAAMX,EACN0B,UAAW9C,IAASS,UAAUsC,WAAWC,oBAE3C3B,EAAS,KAYoD4B,QAAQ,YAAYC,MAAM,WAArF,aAOA7D,EAAAC,EAAAC,cAAA,UACGyB,EAAMY,IAAI,SAAAG,GAAI,OACb1C,EAAAC,EAAAC,cAAC4D,EAAD,CAAMtD,KAAMkC,SCjCLqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACP7E,EAAAC,EAAAC,cAACF,EAAAC,EAAM6E,WAAP,KACE9E,EAAAC,EAAAC,cAAC6E,EAAD,OAEFC,SAASC,eAAe,SAM1BlB","file":"static/js/main.b32e8fa0.chunk.js","sourcesContent":["import React from 'react'\nimport {List, Avatar, ListItemAvatar, ListItem, ListItemText} from '@mui/material';\nfunction Todo(props){\n\treturn (\n\t\t<List>\n\t\t<ListItem>\n\t\t<ListItemAvatar>\n\t\t</ListItemAvatar>\n\t\t<ListItemText primary={props.text} secondary=\"Dummy Deadline!!\" />\n\t\t</ListItem>\n\t\t</List>\n\t)\n};\nexport default Todo\n","import firebase from \"firebase\";\n\nconst firebaseConfig = firebase.initializeApp({\n\n  apiKey: \"AIzaSyAtGuYnxsQKeM86K8gRWMqwDH-XkVQnJ7w\",\n\n  authDomain: \"tod0-app-op.firebaseapp.com\",\n\n  projectId: \"tod0-app-op\",\n\n  storageBucket: \"tod0-app-op.appspot.com\",\n\n  messagingSenderId: \"810823750324\",\n\n  appId: \"1:810823750324:web:4af0098d60972b5dca3de1\",\n\n  measurementId: \"G-V1S97WRW6F\"\n\n});\nconst db = firebaseConfig.firestore();\n\nexport default db;","import React, { useState, useEffect } from 'react';\nimport {Button, FormControl, Input, InputLabel} from '@material-ui/core';\nimport './App.css';\nimport Todo from './Todo'\nimport db from './firebase'\nimport firebase from 'firebase'\n\nfunction App() {\nconst [todos, setTodos] = useState([])\nconst [input, setInput] = useState(\"\");\n\nuseEffect(() =>{\n  db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot =>{\n    setTodos(snapshot.docs.map(doc => doc.data().todo))\n  })\n\n},[]);\n\nconst addToDo = (event) => {\n  event.preventDefault();\n  db.collection('todos').add({\n    todo: input,\n    timestamp: firebase.firestore.FieldValue.serverTimestamp()\n  })\n  setInput(\"\");\n}\n  \n  return (\n    <div className=\"App\">\n     <h1>Hello World!</h1>\n    <form>\n    <FormControl>\n      <InputLabel>Write a ToDo</InputLabel>\n          <Input value={input} onChange={event => setInput(event.target.value)}/>\n\n    </FormControl>\n    <Button disabled={!input} type=\"submit\" onClick ={addToDo} variant=\"contained\" color=\"success\">\n      Add Todo\n    </Button>\n\n    \n\n    </form>\n    <ul>\n      {todos.map(todo => (\n        <Todo text={todo}/>\n        ))}\n    </ul>\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}